[build-system]
requires = ["setuptools", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "itwinai-mnist-plugin"
version = "0.0.1"
description = "MNIST Plugin for itwinai"
requires-python = ">=3.10"
readme = "README.md"
license = { file = "LICENSE" }
authors = [
  { name = "Jarl Sondre Sæther", email = "jarl.sondre.saether@cern.ch" }, 
  { name = "Matteo Bunino", email = "matteo.bunino@cern.ch" }
]
dependencies = [
    "itwinai[torch]",
    "pytest>=8.3.4",
]

[tool.setuptools.packages.find]

# Declare this package as part of the `itwinai.plugins` namespace
where = ["src"]

# Make sure to list all the plugin subfolders here,
# otherwise the plugin may not be installed correctly!
include = [
    "itwinai.plugins.my_awesome_plugin",
    "itwinai.plugins.my_awesome_plugin.plugin_subfolder",
    "itwinai.plugins.my_awesome_plugin.another_plugin_subfolder",
]

# Ruff configuration: https://docs.astral.sh/ruff/configuration/
[tool.ruff]
line-length = 95

[tool.ruff.lint]
select = [
  "E",     # pycodestyle errors
  "F",     # pyflakes: undefined names, unused imports, etc.
  "I",     # isort: import sorting
  "W",     # pycodestyle warnings
  "B",     # flake8-bugbear: likely bugs and bad practices (e.g. mutable defaults)
  "C4",    # flake8-comprehensions: unnecessary or suboptimal comprehensions
  "SIM",   # flake8-simplify: redundant ifs, returns, boolean logic
  "UP",    # pyupgrade: use modern Python syntax (e.g. f-strings, `Path()` literals)
  "PTH",   # flake8-use-pathlib: use pathlib instead of os.path
  "N",     # pep8-naming: naming conventions for classes, functions, variables
]
ignore = [
  "E203",      # Whitespace before ':' – conflicts with Black
  "PTH109",    # Allow os.getcwd()
  "PTH122",    # Avoid replacing os.path.splitext – Path.suffix drops info (e.g. .tar.gz)
  "PTH123",    # Allow use of builtin open() – Path.open() adds no real benefit
  "UP006",     # Keep using typing.List/Dict/Set – prefer consistency over builtin generics
  "UP035",     # Same as above – avoid auto-converting to list[]/dict[] syntax
  "B904",      # Don't require `from err` in CLI code – breaks Typer/Click behavior
  "SIM108",    # Don't always use ternary operators — they can be kind of hard to read sometimes
  "N806",      # Allow UPPER_CASE_VARIABLE_NAMES in function scopes (for default values etc.)
  "N812",      # Allow importing stuff as uppercase (e.g. function as F)
]
fixable = ["ALL"]

[tool.ruff.format]
quote-style = "double"
indent-style = "space"
skip-magic-trailing-comma = false
line-ending = "auto"
